/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <7 8>;
        };

        Iock {
            bindings = <&kp K_LOCK>;
            key-positions = <17 18>;
        };
    };

    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LALT &kp LCTRL &kp LSHFT>;
            label = "HYPER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none      &kp B  &kp L       &kp D           &kp W          &kp Z          &kp SINGLE_QUOTE  &kp F           &kp O           &kp U           &kp J     &kp SEMICOLON
&none      &kp N  &mt LGUI R  &mt LEFT_ALT T  &mt LCTRL S    &kp G          &kp Y             &mt LCTRL H     &mt LEFT_ALT A  &mt LEFT_GUI E  &kp I     &kp COMMA
&lt 3 TAB  &kp Q  &kp X       &kp M           &kp C          &kp V          &kp K             &kp M           &kp PERIOD      &kp MINUS       &kp FSLH  &kp EXCLAMATION
                              &hyper          &kp BACKSPACE  &lt 1 SPACE    &lt 2 ENTER       &kp LEFT_SHIFT  &kp Q
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                  &trans  &trans        &trans          &trans        &trans     &kp BSPC
&none  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10                 &trans  &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&none  &kp F11  &kp F12  &trans  &trans  &kp LG(LS(NUMBER_4))    &trans  &kp LA(LEFT)  &kp LA(RIGHT)   &trans        &trans     &trans
                         &trans  &trans  &trans                  &trans  &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCL     &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK   &none
&trans     &kp HASH     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE        &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SEMICOLON  &none
&kp LSHFT  &kp PERCENT  &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND    &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUBS       &none
                                    &trans                &trans                 &trans           &trans     &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LA(LS(KP_NUMBER_7))  &kp LS(LA(KP_NUMBER_8))  &kp LA(LS(KP_NUMBER_9))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LA(LS(KP_NUMBER_4))  &kp LS(LA(KP_NUMBER_5))  &kp LA(LS(KP_NUMBER_6))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LA(LS(KP_NUMBER_1))  &kp LA(LS(KP_NUMBER_2))  &kp LA(LS(KP_NUMBER_3))  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans                   &trans
            >;
        };
    };
};
