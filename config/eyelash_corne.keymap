#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <7 8>;
        };

        Iock {
            bindings = <&kp K_LOCK>;
            key-positions = <17 18>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <36 37>;
        };
    };

    behaviors {
        Hold_tap_left: Hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 19 20 21 6 7 9 8 10 11 23 22 18 30 32 31 33 34 35>;
            hold-while-undecided;
        };

        Hold_tap_right: Hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <15 16 36 37 38 5 4 3 2 1 0 12 13 14 17 24 25 27 26 28 29>;
            hold-while-undecided;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        /*********************************************************
     *  BASE LAYER (as you provided)
     *********************************************************/

        default_layer {
            display-name = "BASE";
            bindings = <
&kp TILDE  &kp B  &kp L                  &kp D                        &kp W                   &kp Z                            &kp UP                &kp SINGLE_QUOTE  &kp F                    &kp O                        &kp U                        &kp J     &kp SEMICOLON
&none      &kp N  &Hold_tap_left LGUI R  &Hold_tap_left LEFT_ALT T    &Hold_tap_left LCTRL S  &kp G                  &kp LEFT  &kp ENTER  &kp RIGHT  &kp Y             &Hold_tap_right RCTRL H  &Hold_tap_right RIGHT_ALT A  &Hold_tap_right RIGHT_GUI E  &kp I     &kp COMMA
&lt 3 TAB  &kp Q  &kp X                  &kp M                        &kp C                   &kp V        &trans              &kp DOWN              &kp K             &kp P                    &kp PERIOD                   &kp MINUS                    &kp FSLH  &kp EXCLAMATION
                                         &mt LC(LS(LA(LGUI))) ESCAPE  &kp BACKSPACE           &lt 1 SPACE                                            &lt 2 ENTER       &kp RIGHT_SHIFT          &kp Q
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        /*********************************************************
     *  FUNCTION LAYER (arrows at same columns)
     *********************************************************/

        function_layer {
            display-name = "FUNC";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                                    &kp UP                &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans        &kp BSPC   &none
&none   &kp F6   &kp F7   &kp F8  &kp F9  &kp F10                         &kp LEFT  &kp ENTER  &kp RIGHT  &none             &kp LEFT           &kp DOWN         &kp UP_ARROW  &kp RIGHT  &none
&none   &kp F11  &kp F12  &trans  &trans  &kp LG(LS(NUMBER_4))  &trans              &kp DOWN              &kp LA(LEFT)      &kp LA(RIGHT)      &trans           &trans        &none      &none
                          &trans  &trans  &trans                                                          &trans            &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        /*********************************************************
     *  SYMBOL LAYER (arrows at same columns)
     *********************************************************/

        symbol_layer {
            display-name = "SYMB";
            bindings = <
&trans     &kp EXCL     &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE                              &kp UP                &none   &kp N7        &kp N8        &kp N9        &kp ASTRK             &none
&trans     &kp POUND    &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                   &kp LEFT  &kp ENTER  &kp RIGHT  &none   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SEMICOLON         &none
&kp LSHFT  &kp PERCENT  &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND  &kp EQUAL              &kp DOWN              &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NON_US_BACKSLASH  &none
                                    &trans                &trans                 &trans                                                      &trans  &trans        &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        /*********************************************************
     *  WINDOWS LAYER (arrows at same columns)
     *********************************************************/

        windows_layer {
            display-name = "WIN";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &kp UP                &kp LA(LS(KP_NUMBER_7))  &kp LS(LA(KP_NUMBER_8))  &kp LA(LS(KP_NUMBER_9))  &trans  &trans  &none
&trans  &trans  &trans  &trans  &trans  &trans            &kp LEFT  &kp ENTER  &kp RIGHT  &none                    &none                    &none                    &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans              &kp DOWN              &kp LA(LS(KP_NUMBER_1))  &kp LA(LS(KP_NUMBER_2))  &kp LA(LS(KP_NUMBER_3))  &trans  &none   &none
                        &trans  &trans  &trans                                            &trans                   &trans                   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
