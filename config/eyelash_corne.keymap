#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener {
    input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
    input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <7 8>;
        };
    };

    behaviors {
        hold_tap_left: hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hold_tap_right: hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        /******************************************************
         * BASE LAYER (old “BASE”) -- 6×3 + extra joystick keys
         ******************************************************/
        base_layer {
            display-name = "BASE";
            bindings = <

            /* ------------------------------
             * ROW 1: 13 columns total
             * Old had 12 keys; we add 1 empty
             *
             * Indices: 0..12
             *  0..5 = TILDE..Z
             *  6 = joystick => &none
             *  7..12 = ' .. SEMICOLON
             */

            &kp TILDE  &kp B  &kp L   &kp D  &kp W  &kp Z
            &none      /* new joystick button at col6, empty */
            &kp SINGLE_QUOTE  &kp F  &kp O  &kp U  &kp J  &kp SEMICOLON


            /* ------------------------------
             * ROW 2: 15 columns total
             * Old had 12 keys; 3 new empty
             *
             * Indices: 0..14
             *  0..5 = old col0..5 => none, N, LGUI_R, ...
             *  6..8 = joystick => &none
             *  9..14 = old col6..11 => Y..COMMA
             */

            /* old col0..5 */
            &none            &kp N             &hold_tap_left LGUI R  &hold_tap_left LEFT_ALT T
            &hold_tap_left LCTRL S  &kp G

            /* 3 new empty columns => col6,7,8 */
            &none            &none            &none

            /* old col6..11 => col9..14 */
            &kp Y            &hold_tap_right RCTRL H  &hold_tap_right RIGHT_ALT A
            &hold_tap_right RIGHT_GUI E      &kp I  &kp COMMA


            /* ------------------------------
             * ROW 3: 14 columns total
             * Old had 12 keys; 2 new columns
             * Shift entire row 1 to the right => col0 => &none
             *
             * Indices: 0..13
             * col0 => &none
             * col1..6 => old col0..5 => <t 3 TAB, Q, X, M, C, V>
             * col7 => joystick/scroll => &none
             * col8..13 => old col6..11 => K..EXCLAMATION
             */

            &none            /* shift everything by 1 */
            <t 3 TAB>  &kp Q   &kp X   &kp M  &kp C  &kp V
            &none            /* col7 => scroll wheel => empty */
            &kp K       &kp P  &kp PERIOD  &kp MINUS  &kp FSLH  &kp EXCLAMATION


            /* ------------------------------
             * ROW 4: unchanged from old (6 columns)
             * Indices: 0..5
             */
            &mt LC(LS(LA(LGUI))) ESCAPE  &kp BACKSPACE  &lt 1 SPACE
            &lt 2 ENTER  &kp RIGHT_SHIFT  &kp Q

            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        /*****************************************
         * FUNCTION LAYER (old “FUNC”)
         * No joystick additions => same mapping
         *****************************************/
        function_layer {
            display-name = "FUNC";
            bindings = <
                /* Row 1 (12 keys) */
                &trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans
                &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &kp BSPC

                /* Row 2 (12 keys) */
                &none   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
                &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans

                /* Row 3 (12 keys) */
                &none   &kp F11  &kp F12  &trans  &trans  &kp LG(LS(NUMBER_4))  &trans
                &kp LA(LEFT)  &kp LA(RIGHT)  &trans  &trans  &trans

                /* Row 4 (6 keys) */
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        /*****************************************
         * SYMBOL LAYER (old “SYMB”)
         * No joystick additions => same mapping
         *****************************************/
        symbol_layer {
            display-name = "SYMB";
            bindings = <
                /* Row 1 (12 keys) */
                &trans  &kp EXCL  &kp AT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE
                &kp PLUS  &kp N7  &kp N8  &kp N9  &kp ASTERISK  &none

                /* Row 2 (12 keys) */
                &trans  &kp MINUS &kp EQUAL &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
                &kp GRAVE  &kp MINUS  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp SEMICOLON  &none

                /* Row 3 (12 keys) */
                &kp LSHFT  &kp PERCENT  &kp CARET  &kp LEFT_BRACKET
                &kp RIGHT_BRACKET  &kp AMPERSAND  &kp EQUAL  &kp NUMBER_1
                &kp NUMBER_2  &kp NUMBER_3  &kp NUBS  &none

                /* Row 4 (6 keys) */
                &trans  &trans  &trans  &trans  &trans  &kp N0
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        /****************************************
         * WINDOWS LAYER (old “WIN”)
         ****************************************/
        windows_layer {
            display-name = "WIN";
            bindings = <
                /* Row 1 (12 keys) */
                &trans &trans &trans &trans &trans &trans &trans
                &kp LA(LS(KP_NUMBER_7))  &kp LS(LA(KP_NUMBER_8))
                &kp LA(LS(KP_NUMBER_9))  &trans &trans

                /* Row 2 (12 keys) */
                &trans &trans &trans &trans &trans &trans &trans
                &kp LA(LS(KP_NUMBER_4))  &kp LS(LA(KP_NUMBER_5))
                &kp LA(LS(KP_NUMBER_6))  &trans &trans

                /* Row 3 (12 keys) */
                &trans &trans &trans &trans &trans &trans &trans
                &kp LA(LS(KP_NUMBER_1))  &kp LA(LS(KP_NUMBER_2))
                &kp LA(LS(KP_NUMBER_3))  &trans &trans

                /* Row 4 (6 keys) */
                &trans &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};